{"id":1385843421,"question_id":889,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1725999970,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1385843421/","is_pending":"Not Pending","title":"Buddy Strings","memory":"9.6 MB","code":"class Solution {\npublic:\n    bool buddyStrings(string s, string goal) {\n        int N = (int)s.size();\n        if ((int)s.size() != (int)goal.size())\n            return false;\n        \n        int cnt = 0;\n        map<char, int> m, n;\n        for (int i=0; i<N; i++) {\n            if (s[i] == goal[i])\n                cnt++;\n            else {\n                m[s[i]]++;\n                m[goal[i]]--;\n            }\n            n[s[i]]++;\n        }\n        bool ok1 = false;\n        for (auto [k, v] : m)\n            ok1 |= v;\n        \n        bool ok2 = false;\n        for (auto [k, v] : n)\n            ok2 |= (v >= 2);\n        \n        return (cnt + 2 == N && !ok1) || (s == goal && ok2);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"buddy-strings","has_notes":false,"flag_type":1}