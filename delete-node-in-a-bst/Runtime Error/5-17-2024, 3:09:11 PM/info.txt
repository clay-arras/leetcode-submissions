{"id":1260882050,"question_id":450,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715983751,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1260882050/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* find(TreeNode& n, int val, int l, int r, TreeNode* prev) {\n        if (n.val == val) return prev;\n        else if (n.val < val && n.right != NULL) return find(*n.right, val, n.val, r, &n);\n        else if (n.val > val && n.left != NULL) return find(*n.left, val, l, n.val, &n);\n        return NULL;\n    }\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if (root == NULL)\n            return NULL;\n\n        TreeNode* prev = new TreeNode(INT_MAX, root, NULL);\n        TreeNode* ptr = find(*root, key, -INT_MAX, INT_MAX, prev); \n        root = prev;\n\n        if (ptr != NULL) {\n            if (ptr->left->val == key) {\n                TreeNode* tmp = ptr->left->right;\n                ptr->left = ptr->left->left;\n                ptr = ptr->left;\n                while (true) {\n                    if (ptr == NULL)\n                        break;\n                    if (ptr->left == NULL && tmp->val < ptr->val) {\n                        ptr->left = tmp;\n                        break;\n                    }\n                    if (ptr->right == NULL && tmp->val > ptr->val) {        \n                        ptr->right = tmp;\n                        break;\n                    }\n                    if (tmp->val < ptr->val)\n                        ptr = ptr->left;\n                    else if (tmp->val > ptr->val)\n                        ptr = ptr->right;\n                }\n\n            } else if (ptr->right->val == key) {\n                TreeNode* tmp = ptr->right->right;\n                ptr->right = ptr->right->left;\n                ptr = ptr->right;\n                while (true) {\n                    if (ptr->left == NULL && tmp->val < ptr->val) {\n                        ptr->left = tmp;\n                        break;\n                    }\n                    if (ptr->right == NULL && tmp->val > ptr->val) {\n                        ptr->right = tmp;\n                        break;\n                    }\n                    if (tmp->val < ptr->val)\n                        ptr = ptr->left;\n                    else if (tmp->val > ptr->val)\n                        ptr = ptr->right;\n                }\n            }\n        }\n\n        return root->left;\n    }\n};","compare_result":"11111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"delete-node-in-a-bst","has_notes":false,"flag_type":1}