{"id":1251256951,"question_id":437,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715034898,"status":10,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/1251256951/","is_pending":"Not Pending","title":"Path Sum III","memory":"21.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    int t;\n    map<long long, int> m;\n\n    void dfs(TreeNode n, long long cur) {\n        cur += n.val;\n        m[n.val - cur]++;\n        ans += m[t - cur];\n\n        if (n.left != NULL) \n            dfs(*n.left, cur);\n        if (n.right != NULL) \n            dfs(*n.right, cur);\n        \n        m[n.val - cur]--;\n        cur -= n.val;\n    }\n\n    int pathSum(TreeNode* root, int targetSum) {\n        ans = 0;\n        t = targetSum;\n\n        if (root == NULL)\n            return 0;\n       \n        dfs(*root, 0);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii","has_notes":false,"flag_type":1}