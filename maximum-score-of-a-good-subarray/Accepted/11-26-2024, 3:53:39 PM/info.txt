{"id":1463766939,"question_id":1918,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1732665219,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1463766939/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"93.4 MB","code":"class Solution {\npublic:\n    int maximumScore(vector<int>& nums, int k) {\n        int N = (int)nums.size();\n        int mn = nums[k], ans = nums[k];\n        for (int l=k, r=k; l-1>=0 || r+1<N; ) {\n            if (l-1 < 0) \n                mn = min(mn, nums[++r]);\n            else if (r+1 >= N)\n                mn = min(mn, nums[--l]);\n            else if (nums[l-1] > nums[r+1])\n                mn = min(mn, nums[--l]);\n            else if (nums[l-1] <= nums[r+1])\n                mn = min(mn, nums[++r]);\n                \n            ans = max(ans, (r - l + 1) * mn);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-score-of-a-good-subarray","has_notes":false,"flag_type":1}