{"id":1463765404,"question_id":1918,"lang":"cpp","lang_name":"C++","time":"1 week, 2 days","timestamp":1732664982,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1463765404/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maximumScore(vector<int>& nums, int k) {\n        int N = (int)nums.size();\n        int mn = nums[k], ans = 0;\n        for (int l=k, r=k; l>=0 || r<N; ) {\n            if (l-1 < 0 && r+1 >= N) \n                break;\n            cout << l << \" \" << r << endl;\n            if (l-1 < 0) {\n                // cout << 1 << endl;\n                mn = min(mn, nums[++r]);\n            } else if (r+1 >= N) {\n                // cout << 2 << endl;\n                mn = min(mn, nums[--l]);\n            } else if (nums[l-1] > nums[r+1]) {\n                // cout << 3 << endl;\n                mn = min(mn, nums[--l]);\n            } else if (nums[l-1] <= nums[r+1]) {\n                // cout << 4 << endl;\n                mn = min(mn, nums[++r]);\n            }\n            // cout << mn << endl;\n            ans = max(ans, (r - l + 1) * mn);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111110111","title_slug":"maximum-score-of-a-good-subarray","has_notes":false,"flag_type":1}