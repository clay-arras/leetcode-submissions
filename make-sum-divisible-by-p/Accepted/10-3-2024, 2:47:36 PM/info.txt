{"id":1410949357,"question_id":1694,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1727992056,"status":10,"status_display":"Accepted","runtime":"165 ms","url":"/submissions/detail/1410949357/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"94.8 MB","code":"class Solution {\npublic:\n    struct _int {\n        long long val = -1e9;\n    };\n    int minSubarray(vector<int>& nums, int p) {\n        int N = (int)nums.size();\n        long long k = 0;\n        for (int i=0; i<N; i++)\n            k += nums[i] % p;\n        k %= p;\n\n        if (k == 0)\n            return 0;\n\n        vector<long long> pref(N+1, 0);\n        for (int i=0; i<N; i++)\n            pref[i+1] += pref[i] + nums[i];\n\n        unordered_map<int, _int> m;\n        long long ans = INT_MAX;\n        m[(pref[0] + k)%p].val = 0;\n        for (int i=1; i<=N; i++) {\n            ans = min(ans, i - m[pref[i]%p].val);\n            m[(pref[i] + k)%p].val = i;\n        }\n        return (ans >= N ? -1 : ans);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-sum-divisible-by-p","has_notes":false,"flag_type":1}