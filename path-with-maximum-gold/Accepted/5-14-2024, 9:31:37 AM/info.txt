{"id":1257980114,"question_id":1331,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715704297,"status":10,"status_display":"Accepted","runtime":"69 ms","url":"/submissions/detail/1257980114/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"9.1 MB","code":"class Solution {\npublic:\n    int N, M;\n    int search(vector<bitset<15>>& visited, int i, int j, int maxSum, vector<vector<int>>& g) {\n        visited[i][j] = true;\n        maxSum += g[i][j];\n        int maxCopy = maxSum;\n\n        // for (auto i : visited) {\n        //     for (int j=0; j<15; j++)\n        //         cout << i[j] << \" \";\n        //     cout << endl;\n        // }\n        // cout << endl;\n\n        if (i + 1 < N && !visited[i+1][j] && g[i+1][j])\n            maxSum = max(maxSum, search(visited, i+1, j, maxCopy, g));\n        if (j + 1 < M && !visited[i][j+1] && g[i][j+1])\n            maxSum = max(maxSum, search(visited, i, j+1, maxCopy, g));\n        if (i - 1 >= 0 && !visited[i-1][j] && g[i-1][j])\n            maxSum = max(maxSum, search(visited, i-1, j, maxCopy, g));\n        if (j - 1 >= 0 && !visited[i][j-1] && g[i][j-1])\n            maxSum = max(maxSum, search(visited, i, j-1, maxCopy, g));\n\n        visited[i][j] = false;\n        return maxSum;\n    }\n\n    int getMaximumGold(vector<vector<int>>& grid) {\n        N = (int)grid.size(), M = (int)grid[0].size();\n        vector<bitset<15>> visited(N);\n\n        int ans = 0;\n        for (int i=0; i<N; i++) \n            for (int j=0; j<M; j++) \n                if (grid[i][j])\n                    ans = max(ans, search(visited, i, j, 0, grid));\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"path-with-maximum-gold","has_notes":false,"flag_type":1}