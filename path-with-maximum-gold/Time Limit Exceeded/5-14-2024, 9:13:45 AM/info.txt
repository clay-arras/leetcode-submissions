{"id":1257965022,"question_id":1331,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715703225,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1257965022/","is_pending":"Not Pending","title":"Path with Maximum Gold","memory":"N/A","code":"class Solution {\npublic:\n    int N, M;\n    vector<vector<int>> g;\n\n    int search(vector<vector<int>> visited, int i, int j, int maxSum) {\n        visited[i][j] = true;\n        maxSum += g[i][j];\n        // cout << maxSum << endl;\n        for (auto i : visited) {\n            for (auto j : i)\n                cout << j << \" \";\n            cout << endl;\n        }\n        cout << maxSum << endl;\n        cout << endl;\n        int maxCopy = maxSum;\n\n        if (i + 1 < N && !visited[i+1][j] && g[i+1][j])\n            maxSum = max(maxSum, search(visited, i+1, j, maxCopy));\n        if (j + 1 < M && !visited[i][j+1] && g[i][j+1])\n            maxSum = max(maxSum, search(visited, i, j+1, maxCopy));\n        if (i - 1 >= 0 && !visited[i-1][j] && g[i-1][j])\n            maxSum = max(maxSum, search(visited, i-1, j, maxCopy));\n        if (j - 1 >= 0 && !visited[i][j-1] && g[i][j-1])\n            maxSum = max(maxSum, search(visited, i, j-1, maxCopy));\n        return maxSum;\n    }\n\n    int getMaximumGold(vector<vector<int>>& grid) {\n        N = (int)grid.size(), M = (int)grid[0].size();\n        g = grid;\n        vector<vector<int>> visited(N, vector<int> (M, 0));\n\n        int ans = 0;\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                if (g[i][j])\n                    ans = max(ans, search(visited, i, j, 0));\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111100000000000000000000000000","title_slug":"path-with-maximum-gold","has_notes":false,"flag_type":1}