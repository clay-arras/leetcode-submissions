{"id":1218631308,"question_id":1034,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1711837610,"status":10,"status_display":"Accepted","runtime":"393 ms","url":"/submissions/detail/1218631308/","is_pending":"Not Pending","title":"Subarrays with K Different Integers","memory":"48.5 MB","code":"class Solution {\npublic:\n    int subarraysWithKDistinct(vector<int>& nums, int k) {\n        map<int, int> lm, rm;\n\n        nums.push_back(-1);\n        int N = (int)nums.size();\n        int i = 0, l = -1, r = -1;\n\n        int lk = k;\n        int rk = k;\n\n        int ans = 0;\n        for (i=0; i<N; i++) {\n            while (rk >= 0) {\n                if (r + 1 >= N) break;\n                if (rm[nums[r+1]] == 0) rk--;\n                r++, rm[nums[r]]++;\n            }\n            while (lk > 0) {\n                if (l + 1 >= N) break;\n                if (lm[nums[l+1]] == 0) lk--;\n                l++, lm[nums[l]]++;\n            }\n            lm[nums[i]]--;\n            rm[nums[i]]--;\n            if (lm[nums[i]] == 0) lk++;\n            if (rm[nums[i]] == 0) rk++;\n            \n            cout << l << \" \" << r << endl;\n            ans += r - l;\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"subarrays-with-k-different-integers","has_notes":false,"flag_type":1}