{"id":1215891757,"question_id":3225,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1711587291,"status":10,"status_display":"Accepted","runtime":"392 ms","url":"/submissions/detail/1215891757/","is_pending":"Not Pending","title":"Length of Longest Subarray With at Most K Frequency","memory":"148.7 MB","code":"class Solution {\npublic:\n    int maxSubarrayLength(vector<int>& nums, int k) {\n        map<int, int> m; \n        int N = (int)nums.size();\n        int ans = 0;\n        for (int l=0, r=0, last=-1; r<N; r++) {\n            m[nums[r]]++;\n            if (m[nums[r]] > k)\n                last = nums[r];\n            while (m[last] > k) {\n                m[nums[l]]--;\n                l++;\n            }\n            ans = max(ans, r-l);\n        }\n        return ans + 1;\n    }\n};","compare_resulttitle_slug":"length-of-longest-subarray-with-at-most-k-frequency","has_notes":false,"flag_type":1}