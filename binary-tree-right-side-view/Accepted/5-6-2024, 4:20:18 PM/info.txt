{"id":1251274153,"question_id":199,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715037618,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1251274153/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"14.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n        if (root == NULL)\n            return {};\n        \n        vector<int> ans;\n        queue<TreeNode> q;\n        queue<int> d;\n\n        q.push(*root);\n        d.push(0);\n        while (!q.empty()) {\n            TreeNode x = q.front();\n            int y = d.front();\n            q.pop(), d.pop();\n\n            if (x.right != NULL) {\n                q.push(*x.right);\n                d.push(y + 1);\n            }\n            if (x.left != NULL) {\n                q.push(*x.left);\n                d.push(y + 1);\n            }\n\n            if (y >= (int)ans.size()) {\n                ans.push_back(x.val);\n            }\n        }\n\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}