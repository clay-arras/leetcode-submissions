{"id":1404139888,"question_id":1711,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727457217,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/1404139888/","is_pending":"Not Pending","title":"Find Valid Matrix Given Row and Column Sums","memory":"36.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> restoreMatrix(vector<int>& rowSum, vector<int>& colSum) {\n        int N = (int)rowSum.size(), M = (int)colSum.size();\n        vector<vector<int>> ans(N, vector<int> (M, 0));\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                int t = min(rowSum[i], colSum[j]);\n                ans[i][j] = t;\n                rowSum[i] -= t;\n                colSum[j] -= t;\n\n                \n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-valid-matrix-given-row-and-column-sums","has_notes":false,"flag_type":1}