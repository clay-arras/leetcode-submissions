{"id":1372715907,"question_id":33,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1724974272,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1372715907/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"13.9 MB","code":"class Solution {\npublic:\n    int lastTrue(int l, int r, function<bool(int)> f) {\n        l--;\n        for (int diff=r-l; diff>0; diff/=2) \n            while (l + diff <= r && f(l + diff))\n                l += diff;\n        return l;\n    }\n\n    int search(vector<int>& nums, int target) {\n        int N = (int)nums.size();\n        int p = lastTrue(0, N-1, [&](int i) {\n            return nums[i] >= nums[0];\n        });\n        \n        int l = lastTrue(0, p, [&](int i) {\n            return nums[i] <= target;\n        });\n        int r = lastTrue(p + 1, N-1, [&](int i) {\n            return nums[i] <= target;\n        });\n\n        if (l >= 0 && nums[l] == target)\n            return l;\n        if (nums[r] == target)\n            return r;\n        return -1;\n    }\n};\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}