{"id":1251276823,"question_id":1116,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715038062,"status":10,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/1251276823/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"112.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        if (root == NULL)\n            return 0;\n\n        queue<TreeNode> q;\n        queue<int> d;\n        vector<int> sum;\n\n        q.push(*root);\n        d.push(0);\n        while (!q.empty()) {\n            TreeNode x = q.front();\n            int y = d.front();\n            q.pop(), d.pop();\n\n            if (x.left != NULL) {\n                q.push(*x.left);\n                d.push(y + 1);\n            }\n            if (x.right != NULL) {\n                q.push(*x.right);\n                d.push(y + 1);\n            }\n\n            if (y >= (int)sum.size()) \n                sum.push_back(0);\n            sum[y] += x.val;\n        }\n\n        int ans = 0, maxSum = -INT_MAX;\n        for (int i=0; i<(int)sum.size(); i++) {\n            if (sum[i] > maxSum) {\n                ans = i + 1;\n                maxSum = sum[i];\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}