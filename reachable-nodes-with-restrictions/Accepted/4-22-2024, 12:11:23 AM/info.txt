{"id":1238838074,"question_id":2445,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1713769883,"status":10,"status_display":"Accepted","runtime":"2059 ms","url":"/submissions/detail/1238838074/","is_pending":"Not Pending","title":"Reachable Nodes With Restrictions","memory":"212.4 MB","code":"class Solution {\npublic:\n    const static int MAXN = 1e5 + 1;\n    vector<int> adj_list[MAXN];\n    vector<bool> visited;\n    map<int, int> m;\n\n    int count = 0;\n    void dfs(int s) {\n        visited[s] = true;\n        count++;\n\n        for (int i : adj_list[s]) {\n            if (!visited[i] && !m[i]) {\n                dfs(i);\n            }\n        }\n    }\n\n    int reachableNodes(int n, vector<vector<int>>& edges, vector<int>& restricted) {\n        visited = vector<bool>(n, false);\n        for (auto e : edges) {\n            adj_list[e[1]].push_back(e[0]);\n            adj_list[e[0]].push_back(e[1]);\n        }\n        for (auto r : restricted)\n            m[r]++;\n\n        dfs(0);\n        return count;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reachable-nodes-with-restrictions","has_notes":false,"flag_type":1}