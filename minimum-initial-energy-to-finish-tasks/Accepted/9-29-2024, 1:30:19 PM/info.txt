{"id":1406470450,"question_id":1784,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727641819,"status":10,"status_display":"Accepted","runtime":"287 ms","url":"/submissions/detail/1406470450/","is_pending":"Not Pending","title":"Minimum Initial Energy to Finish Tasks","memory":"119.9 MB","code":"class Solution {\npublic:\n    const static int MX = 2e9+1;\n    int firstTrue(int l, int r, function<bool(int)> f) {\n        r++;\n        while (l < r) {\n            int mid = l + (r - l) / 2;\n            if (f(mid)) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    int minimumEffort(vector<vector<int>>& tasks) {\n        int N = (int)tasks.size();\n        vector<pair<int, pair<int, int>>> t;\n        for (auto i : tasks)\n            t.push_back({-i[1] + i[0], {-i[1], i[0]}});\n        sort(t.begin(), t.end());\n        // for (auto i : t)\n        //     cout << i.first << \" \" << i.second << endl;\n\n        const auto ok = [&](int k) {\n            for (int i=0; i<N; i++) {\n                if (-t[i].second.first <= k) \n                    k -= t[i].second.second;\n                else return false;\n            }\n            return true;\n        };\n\n        return firstTrue(0, MX, ok);\n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"minimum-initial-energy-to-finish-tasks","has_notes":false,"flag_type":1}