{"id":1345399656,"question_id":310,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1722865449,"status":10,"status_display":"Accepted","runtime":"245 ms","url":"/submissions/detail/1345399656/","is_pending":"Not Pending","title":"Minimum Height Trees","memory":"63 MB","code":"class Solution {\npublic:\n    const static int MX = 2e4+1;\n    vector<bool> visited;\n    vector<int> adj_list[MX], ans;\n\n    pair<int, int> dfs1(int s, int d=0) {\n        visited[s] = true;\n        pair<int, int> ret = {d, s};\n        for (int i : adj_list[s]){\n            if (!visited[i]) \n                ret = max(ret, dfs1(i, d+1));\n        }\n        return ret;\n    }\n\n    bool dfs2(int s, int d, int h, int en) {\n        visited[s] = true;\n            \n        bool path = (s == en);\n        for (int i : adj_list[s]) {\n            if (!visited[i]) \n                path |= dfs2(i, d+1, h, en);\n        }\n        if (path && (d == h/2 || (d == h/2+1 && h%2)))\n            ans.push_back(s);\n        return path;\n    }\n    \n    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {\n        for (auto i : edges) {\n            adj_list[i[0]].push_back(i[1]);\n            adj_list[i[1]].push_back(i[0]);\n        }\n        visited = vector<bool> (n, false);\n        int a = dfs1(0).second;\n        visited = vector<bool> (n, false);\n        auto p = dfs1(a);\n        int b = p.second, h = p.first;\n\n        visited = vector<bool> (n, false);\n        dfs2(a, 0, h, b);\n \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-height-trees","has_notes":false,"flag_type":1}