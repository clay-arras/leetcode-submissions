{"id":1215830484,"question_id":1586,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1711579080,"status":10,"status_display":"Accepted","runtime":"39 ms","url":"/submissions/detail/1215830484/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"58.6 MB","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums) {\n        nums.insert(nums.begin(), 0);\n        nums.push_back(0);\n        int N = (int)nums.size();\n\n        int l=0, r=1;\n        bool z = false;\n        for (r=1; r<N-1; r++) {\n            if (nums[r] == 0 && z) {\n                break;\n            } else if (nums[r] == 0) {\n                z = true;\n            }\n        }\n\n        int ans = r - l;\n        for (; l<N-1 && r<N-1; ) {\n            r++;\n            while (r<N-1 && nums[r] == 1) r++;\n            l++;\n            while (l<N-1 && nums[l] == 1) l++;\n            ans = max(ans, r - l);\n        }\n\n        return ans - 2;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-of-1s-after-deleting-one-element","has_notes":false,"flag_type":1}