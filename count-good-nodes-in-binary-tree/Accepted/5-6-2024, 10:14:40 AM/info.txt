{"id":1251049588,"question_id":1544,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715015680,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/1251049588/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"85.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int count = 0;\n    void dfs(TreeNode n, int maxVal) {\n        count += (int)(n.val >= maxVal); \n        maxVal = max(maxVal, n.val);\n        if (n.left != NULL)\n            dfs(*n.left, maxVal);\n        if (n.right != NULL)\n            dfs(*n.right, maxVal);\n    }\n\n    int goodNodes(TreeNode* root) {\n       count = 0;\n       dfs(*root, -INT_MAX);\n       return count; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}