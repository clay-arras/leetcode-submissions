{"id":1401231570,"question_id":189,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727214462,"status":10,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/1401231570/","is_pending":"Not Pending","title":"Rotate Array","memory":"29.5 MB","code":"class Solution {\npublic:\n\n    const static long long MX = 2e5+1;\n    void rotate(vector<int>& nums, int k) {\n        int N = (int)nums.size();\n        \n        const auto sol1 = [&]() {\n            vector<int> ans;\n            for (int i=(MX*N-k)%N; i<N; i++)\n                ans.push_back(nums[i]);\n            for (int i=0; i<(MX*N-k)%N; i++)\n                ans.push_back(nums[i]);\n            nums = ans;\n        };        \n        const auto sol2 = [&]() {\n            for (int j=0; j<gcd(N, k); j++) {\n                int ptr = nums[j];\n                for (int i=1; i<=N/gcd(N, k); i++) \n                    swap(nums[(k*i + j)%N], ptr);\n            }\n        };\n        const auto sol3 = [&]() {\n            deque<int> dq(nums.begin(), nums.end());\n            for (int i=0; i<k; i++) {\n                dq.push_front(dq.back());\n                dq.pop_back();\n            }\n            nums = {dq.begin(), dq.end()};\n        };\n\n        sol3();\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"rotate-array","has_notes":false,"flag_type":1}