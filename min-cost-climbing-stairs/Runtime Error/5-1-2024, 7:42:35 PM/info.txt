{"id":1247016563,"question_id":747,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1714617755,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1247016563/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution {\npublic:\n    int minCostClimbingStairs(vector<int>& cost) {\n        int N = (int)cost.size();\n        vector<int> dp(N + 1, INT_MAX);\n        cost.push_back(0);\n\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        for (int i=2; i<=N; i++) {\n            if (i + 2 <= N)\n                dp[i+2] = min(dp[i+2], dp[i] + cost[i]);\n            if (i + 1 <= N)\n                dp[i+1] = min(dp[i+1], dp[i] + cost[i]);\n        }\n        return dp[N];\n    }\n};","compare_result":"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}