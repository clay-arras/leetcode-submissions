{"id":1238853109,"question_id":200,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1713771593,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1238853109/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> dx = {1, 0, -1, 0};\n    vector<int> dy = {0, 1, 0, -1};\n\n    int numIslands(vector<vector<char>>& grid) {\n        int N = (int)grid.size();\n        int M = (int)grid[0].size();\n\n        vector<vector<bool>> visited =\n            vector<vector<bool>>(N, vector<bool>(M, false));\n\n        auto flood =\n            [&](int i, int j) {\n                visited[i][j] = true;\n                for (int k = 0; k < 4; k++) {\n                    int in = i + dx[k];\n                    int jn = j + dy[k];\n                    if (in >= 0 && in < N && jn >= 0 && jn < M &&\n                        grid[in][jn] == '1' && !visited[in][jn]) {\n                        flood(in, jn);\n                    }\n                }\n            }\n\n        int ans = 0;\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++) {\n                if (!visited[i][j] && g[i][j] == '1') {\n                    flood(i, j);\n                    ans++;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":null,"title_slug":"number-of-islands","has_notes":false,"flag_type":1}