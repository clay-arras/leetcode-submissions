{"id":1238849770,"question_id":200,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1713771193,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1238849770/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> dx = {1, 0, -1, 0};\n    vector<int> dy = {0, 1, 0, -1};\n    vector<vector<bool>> visited;\n\n    int N, M;\n    vector<vector<char>> g;\n    void flood(int i, int j) {\n        cout << i << j << endl;\n        visited[i][j] = true;\n        for (int x : dx) {\n            for (int y : dy) {\n                // int in = i + x;\n                // int jn = j + y;\n                if (i + x >= 0 && i + x < N && j + y >= 0 && j + y < M &&\n                    g[i + x][j + y] == '1' && !visited[i + x][j + y]) {\n                    flood(i + x, j + y);\n                }\n            }\n        }\n    }\n\n    int numIslands(vector<vector<char>>& grid) {\n        N = (int)grid.size();\n        M = (int)grid[0].size();\n\n        visited = vector<vector<bool>>(N, vector<bool>(M, false));\n        g = grid;\n\n        int ans = 0;\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++) {\n                if (!visited[i][j] && g[i][j] == '1') {\n                    flood(i, j);\n                    ans++;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1011111111111001111111001111011111111001001000010","title_slug":"number-of-islands","has_notes":false,"flag_type":1}