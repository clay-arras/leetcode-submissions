{"id":1422553088,"question_id":232,"lang":"python3","lang_name":"Python3","time":"1 month, 3 weeks","timestamp":1728947321,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1422553088/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"16.8 MB","code":"\"\"\"Implements a queue with stacks, can support all queue operations\n\nTypical usage example:\n    my_queue = MyQueue()\n    my_queue.push(9)\n    my_queue.push(3)\n    my_queue.pop()      # returns 9\n\"\"\"\n\nfrom collections import deque\n\n\nclass MyQueue:\n    def __init__(self) -> None:\n        self.push_stack = deque()\n        self.pop_stack = deque()\n\n    def push(self, value: int) -> None:\n        self.push_stack.append(value)\n    \n    def pop(self) -> int:\n        if len(self.pop_stack) == 0:\n            self.transfer()\n        if len(self.pop_stack) == 0:\n            raise IndexError(\"Empty Stack\")\n        return self.pop_stack.pop()\n    \n    def peek(self) -> int:\n        if len(self.pop_stack) == 0:\n            self.transfer()\n        if len(self.pop_stack) == 0:\n            raise IndexError(\"Empty Stack\")\n        return self.pop_stack[-1]\n\n    def transfer(self) -> None:\n        while len(self.push_stack) != 0:\n            top = self.push_stack.pop()\n            self.pop_stack.append(top)\n    \n    def empty(self) -> bool:\n        return len(self.pop_stack) + len(self.push_stack) == 0","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}