{"id":1348886050,"question_id":1727,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1723123278,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1348886050/","is_pending":"Not Pending","title":"Cat and Mouse II","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> dx = {0, 1, 0, -1};\n    vector<int> dy = {1, 0, -1, 0};\n    int N, M;\n    vector<string> g;\n    vector<vector<bool>> visited;\n    pair<int, int> C, Ms, F;\n\n    void dijkstras(int i, int j, int mx, vector<vector<int>>& d) {\n        vector<vector<bool>> visited (N, vector<bool> (M, false));\n        priority_queue<pair<int, pair<int, int>>> pq;\n        d[i][j] = 0;\n        pq.push({0, {i, j}});\n \n        while (!pq.empty()) {\n            int a = pq.top().second.first, b = pq.top().second.second;\n            pq.pop();\n \n            if (visited[a][b])\n                continue;\n            visited[a][b] = true;\n            \n            for (int v=0; v<4; v++) {\n                for (int k=1; k<=mx; k++) {\n                    int x = a + dx[v] * k, y = b + dy[v] * k;\n                    if (x >= 0\n                        && x < N\n                        && y >= 0\n                        && y < M) {\n                        if (g[x][y] == '#') break;\n                        if (d[a][b] + 1 < d[x][y]) {\n                            d[x][y] = d[a][b] + 1;\n                            pq.push({-d[x][y], {x, y}});\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    void dfs(int x, int y, int k, vector<vector<int>>& c, vector<vector<int>>& m) {\n        visited[x][y] = true;\n        for (int i = 0; i < 4; i++) {\n            for (int j = 1; j <= k; j++) {\n                int xnew = x + dx[i] * j;\n                int ynew = y + dy[i] * j;\n                if (xnew >= 0 && xnew < N && ynew >= 0 && ynew < M) {\n                    if (g[xnew][ynew] == '#') break;\n                    if (!visited[xnew][ynew] && (m[xnew][ynew] < c[xnew][ynew] || (g[xnew][ynew] == 'F' && m[xnew][ynew] == c[xnew][ynew])))\n                        dfs(xnew, ynew, k, c, m);\n                }\n            }\n        }\n    }\n\n    bool canMouseWin(vector<string>& grid, int catJump, int mouseJump) {\n        N = (int)grid.size();\n        M = (int)grid[0].size();\n        g = grid;\n\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < M; j++) {\n                if (g[i][j] == 'C')\n                    C = {i, j};\n                if (g[i][j] == 'M')\n                    Ms = {i, j};\n                if (g[i][j] == 'F')\n                    F = {i, j};\n            }\n        }   \n\n        const int MXV = INT_MAX-1e2;\n        // const int MXV = 20;\n        vector<vector<int>> m(N, vector<int> (M, MXV)), c(N, vector<int> (M, MXV));\n\n        dijkstras(C.first, C.second, catJump, c);\n        dijkstras(Ms.first, Ms.second, mouseJump, m);\n\n        visited = vector<vector<bool>>(N, vector<bool>(M, false));\n        dfs(Ms.first, Ms.second, mouseJump, c, m);\n\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) \n                cout << setw(4) << c[i][j] << \" \";\n            cout << endl;\n        }\n        cout << endl;\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) \n                cout << setw(4) << m[i][j] << \" \";\n            cout << endl;\n        }\n\n        cout << endl;\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++)\n                cout << visited[i][j];\n            cout << endl;\n        }\n\n        return visited[F.first][F.second];\n    }\n};\n// [\"####F\",\n//  \"#C...\",\n//  \"M....\"]\n\n// [\"C...#\",\n//  \"...#F\",\n//  \"....#\",\n//  \"M....\"]\n\n// [\".M...\",\n//  \"..#..\",\n//  \"#..#.\",\n//  \"C#.#.\",\n//  \"...#F\"]\n\n// [\"#F..\",\n//  \"..#.\",\n//  \"..M.\",\n//  \"..C.\"]\n\n// [\"FC#..\",\n//  \".....\",\n//  \"M#..#\"]\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111","title_slug":"cat-and-mouse-ii","has_notes":false,"flag_type":1}