{"id":1259018988,"question_id":74,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715801670,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1259018988/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"12.2 MB","code":"class Solution {\npublic:\n    int N, M, t;\n    vector<vector<int>> g;\n    int lastTrue(int l, int r) {\n        l--;\n        for (int diff=r-l; diff>0; diff/=2) \n            while (l+diff <= r && ok(l+diff))\n                l += diff;\n        return l;\n    }\n\n    bool ok(int k) {\n        if (k >= 0 && k < N*M) \n            return g[k/M][k%M] <= t;\n        return (k <= N*M); \n    }\n\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        N = (int)matrix.size(), M = (int)matrix[0].size();\n        t = target, g = matrix;\n\n        int val = lastTrue(0, N*M-1);\n        if (val >= 0 && val < N*M)\n            return matrix[val/M][val%M] == target;\n        return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}