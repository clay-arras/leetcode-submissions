{"id":1261427797,"question_id":1021,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1716047621,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1261427797/","is_pending":"Not Pending","title":"Distribute Coins in Binary Tree","memory":"18 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    map<TreeNode*, int> m;\n\n    int postOrder1(TreeNode* node) {\n        int l = 0, r = 0;\n        if (node->left != NULL)\n            l = postOrder1(node->left);\n        if (node->right != NULL)\n            r = postOrder1(node->right);\n        \n        m[node] = node->val + l + r;\n        return m[node];\n    }\n\n    int postOrder2(TreeNode* node) {\n        int l = 0, r = 0;\n        if (node->left != NULL)\n            l = postOrder2(node->left);\n        if (node->right != NULL)\n            r = postOrder2(node->right);\n        \n        int val = 1 + l + r;\n        ans += abs(m[node] - val);\n        return val;\n    }\n\n    int distributeCoins(TreeNode* root) {\n        postOrder1(root);\n        postOrder2(root);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"distribute-coins-in-binary-tree","has_notes":false,"flag_type":1}