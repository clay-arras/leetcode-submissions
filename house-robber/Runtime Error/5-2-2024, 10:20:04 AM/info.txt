{"id":1247594954,"question_id":198,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1714670404,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1247594954/","is_pending":"Not Pending","title":"House Robber","memory":"N/A","code":"class Solution {\npublic:\n    const static int MAXN = 1e2 + 1;\n    int dp[MAXN];\n    int rob(vector<int>& nums) {\n        int N = (int)nums.size();\n        dp[0] = nums[0];\n        dp[1] = max(nums[0], nums[1]);\n        for (int i=0; i<N; i++) {\n            if (i-3 >= 0)\n                dp[i] = max(dp[i-1], dp[i-3] + nums[i]);\n            if (i-2 >= 0)\n                dp[i] = max(dp[i-1], dp[i-2] + nums[i]);\n        }\n        for (auto i : dp) \n            cout << i << \" \";\n        cout << endl;\n        return dp[N-1];\n    }\n};","compare_result":"1100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"house-robber","has_notes":false,"flag_type":1}