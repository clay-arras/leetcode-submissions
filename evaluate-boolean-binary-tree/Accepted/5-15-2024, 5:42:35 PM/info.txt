{"id":1259161672,"question_id":2416,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715820155,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1259161672/","is_pending":"Not Pending","title":"Evaluate Boolean Binary Tree","memory":"17.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool evaluateTree(TreeNode* root) {\n        if (root->val == 0)\n            return false;\n        if (root->val == 1)\n            return true;\n        if (root->val == 2)\n            return evaluateTree(root->left) | evaluateTree(root->right);\n        if (root->val == 3)\n            return evaluateTree(root->left) & evaluateTree(root->right);\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"evaluate-boolean-binary-tree","has_notes":false,"flag_type":1}