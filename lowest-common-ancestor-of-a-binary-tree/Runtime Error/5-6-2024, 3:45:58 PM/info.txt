{"id":1251261186,"question_id":236,"lang":"python3","lang_name":"Python3","time":"7Â months","timestamp":1715035558,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1251261186/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    pok = False\n    qok = False\n    ans = None\n\n    def dfs(self, node, ptarget, qtarget):\n        if (node == ptarget):\n            Solution.pok = True\n        if (node == qtarget):\n            Solution.qok = True\n\n        if (node.left != None):\n            self.dfs(node.left, ptarget, qtarget)\n        if (node.right != None):\n            self.dfs(node.right, ptarget, qtarget)\n        \n        if Solution.pok and Solution.qok and ans is None:\n            Solution.ans = node\n        \n\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        self.dfs(root, p, q)\n        return Solution.ans\n\n        ","compare_result":"00000000000000000000000000000000","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}