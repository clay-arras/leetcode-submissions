{"id":1385852185,"question_id":1253,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1726000711,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1385852185/","is_pending":"Not Pending","title":"Sort the Matrix Diagonally","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {\n        int N = (int)mat.size(), M = (int)mat[0].size();\n        vector<vector<int>> ans = mat;\n        auto cmp = [&](pair<int, int> x, pair<int, int> y) {\n            return mat[x.first][x.second] < mat[y.first][y.second];\n        };\n        \n        for (int i=0; i<N; i++) {\n            vector<pair<int, int>> crds;\n            for (int x=i, y=0; x<N && y<M; x++, y++) \n                crds.push_back({x, y});\n            sort(crds.begin(), crds.end());\n            for (int k=0, x=i, y=0; x<N && y<M; k++, x++, y++) \n                ans[x][y] = mat[crds[k].first][crds[k].second];\n                \n        }\n        for (int j=1; j<M; j++) {\n            vector<pair<int, int>> crds;\n            for (int x=0, y=j; x<N && y<M; x++, y++) \n                crds.push_back({x, y});\n            sort(crds.begin(), crds.end());\n            for (int k=0, x=0, y=j; x<N && y<M; k++, x++, y++) \n                ans[x][y] = mat[crds[k].first][crds[k].second];\n        }\n        return ans;\n    }\n};","compare_result":"001110000000010","title_slug":"sort-the-matrix-diagonally","has_notes":false,"flag_type":1}