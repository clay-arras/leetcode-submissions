{"id":1304264811,"question_id":1431,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1719704246,"status":10,"status_display":"Accepted","runtime":"189 ms","url":"/submissions/detail/1304264811/","is_pending":"Not Pending","title":"All Ancestors of a Node in a Directed Acyclic Graph","memory":"71.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> adj_list;\n    vector<vector<int>> ans;\n    vector<bool> visited;\n\n    void dfs(int s) {\n        visited[s] = true;\n\n        for (auto i : adj_list[s])\n            if (!visited[i])\n                dfs(i);\n    }\n\n    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {\n        adj_list = vector<vector<int>> (n, vector<int>());\n        ans = vector<vector<int>> (n, vector<int>());\n        visited = vector<bool> (n, false);\n        for (auto i : edges) \n            adj_list[i[1]].push_back(i[0]);\n        \n        for (int i=0; i<n; i++) {\n            fill(visited.begin(), visited.end(), false);\n            dfs(i);\n            for (int j=0; j<n; j++) \n                if (visited[j] && i != j)\n                    ans[i].push_back(j);\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"all-ancestors-of-a-node-in-a-directed-acyclic-graph","has_notes":false,"flag_type":1}