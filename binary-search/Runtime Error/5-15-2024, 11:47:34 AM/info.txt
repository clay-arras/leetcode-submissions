{"id":1258983884,"question_id":792,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715798854,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1258983884/","is_pending":"Not Pending","title":"Binary Search","memory":"N/A","code":"class Solution {\npublic:\n\n    template<class T>\n    T lastTrue(T lo, T hi, function<bool(T)> f) {\n        lo--;\n        for (T dif=hi-lo; dif>0; dif/=2) {\n            while (lo + dif <= hi && f(lo + dif)) { \n                lo += dif; \n                cout << lo << endl;\n            }\n        }\n        return lo;\n    }\n\n    // template<class T>\n    // T firstTrue(T lo, T hi, function<bool(T)> f) {\n    //     hi++;\n    //     while (lo < hi) {\n    //         T mid = lo + (hi - lo) / 2;\n    //         if (f(mid)) hi = mid;\n    //         else lo = mid + 1;\n    //     }\n    //     return lo;\n    // }\n\n    int search(vector<int>& nums, int target) {\n        int N = (int)nums.size();\n        if (N == 1)\n            return (nums[0] == target ? 0 : -1);\n\n        function<bool(int)> ok = [&](int k) -> bool {\n            return nums[k] <= target;\n        };\n\n        int val = lastTrue(0, N-1, ok);\n        return (nums[val] == target ? val : -1);\n    }\n};","compare_result":"11111100000000000000000000000000000000000000000","title_slug":"binary-search","has_notes":false,"flag_type":1}