{"id":1258989083,"question_id":792,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715799232,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/1258989083/","is_pending":"Not Pending","title":"Binary Search","memory":"30 MB","code":"class Solution {\npublic:\n\n    template<class T>\n    T lastTrue(T lo, T hi, function<bool(T)> f) {\n        lo--;\n        for (T dif=hi-lo; dif>0; dif/=2) {\n            while (lo + dif <= hi && f(lo + dif)) { \n                lo += dif; \n            }\n        }\n        return lo;\n    }\n\n    // template<class T>\n    // T firstTrue(T lo, T hi, function<bool(T)> f) {\n    //     hi++;\n    //     while (lo < hi) {\n    //         T mid = lo + (hi - lo) / 2;\n    //         if (f(mid)) hi = mid;\n    //         else lo = mid + 1;\n    //     }\n    //     return lo;\n    // }\n\n    int search(vector<int>& nums, int target) {\n        int N = (int)nums.size();\n\n        function<bool(int)> ok = [&](int k) -> bool {\n            if (k >= 0 && k < N)\n                return nums[k] <= target;\n            return (k >= 0);\n        };\n\n        for (int i=-1; i<=N; i++) \n            cout << ok(i);\n\n        int val = lastTrue(0, N-1, ok);\n        return (val >= 0 && val < N && nums[val] == target ? val : -1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false,"flag_type":1}