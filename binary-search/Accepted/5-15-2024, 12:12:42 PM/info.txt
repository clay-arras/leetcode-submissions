{"id":1259003270,"question_id":792,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715800362,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1259003270/","is_pending":"Not Pending","title":"Binary Search","memory":"29.9 MB","code":"class Solution {\npublic:\n\n    // template<class T>\n    // T lastTrue(T l, T r, function<bool(T)> f) {\n    //     l--;\n    //     for (T diff=r-l; diff>0; diff/=2) \n    //         while (l + diff <= r && f(l + diff))  \n    //             l += diff; \n    //     return l;\n    // }\n\n    template<class T>\n    T firstTrue(T l, T r, function<bool(T)> f) {\n        // r++;\n        for (r++ ; l < r; ) {\n            T mid = l + (r - l) / 2;\n            if (f(mid)) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    int search(vector<int>& nums, int target) {\n        int N = (int)nums.size();\n\n        // function<bool(int)> ok = [&](int k) -> bool {\n        //     if (k >= 0 && k < N)\n        //         return nums[k] <= target;\n        //     return (k >= 0);\n        // };\n\n        function<bool(int)> ok = [&](int k) {\n            if (k >= 0 && k < N)\n                return nums[k] >= target;\n            return (k < N);\n        };\n\n        int val = firstTrue(0, N-1, ok);\n        return (val >= 0 && val < N && nums[val] == target ? val : -1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false,"flag_type":1}