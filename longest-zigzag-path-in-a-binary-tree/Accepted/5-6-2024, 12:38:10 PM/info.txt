{"id":1251168294,"question_id":1474,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715024290,"status":10,"status_display":"Accepted","runtime":"222 ms","url":"/submissions/detail/1251168294/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"99 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n\n    // prev is whether the last one was left\n    void dfs(TreeNode n, int val, bool prev) {\n        ans = max(ans, val);\n\n        if (n.left != NULL) \n            dfs(*n.left, (int)!prev * val + 1, true);\n        if (n.right != NULL) \n            dfs(*n.right, (int)prev * val + 1, false);\n    }\n\n    int longestZigZag(TreeNode* root) {\n        if (root == NULL)\n            return 0;\n\n        if (root->left != NULL)\n            dfs(*(root->left), 1, true);\n        if (root->right != NULL)\n            dfs(*(root->right), 1, false);\n            \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}