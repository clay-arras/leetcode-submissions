{"id":1441318940,"question_id":3628,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1730602739,"status":10,"status_display":"Accepted","runtime":"448 ms","url":"/submissions/detail/1441318940/","is_pending":"Not Pending","title":"Find Minimum Time to Reach Last Room II","memory":"112.1 MB","code":"class Solution {\npublic:\n    int N, M;\n    vector<vector<int>> g;\n    vector<int> dx = {1, 0, -1, 0};\n    vector<int> dy = {0, 1, 0, -1};\n\n    int Dijkstras() {\n        const int mxV = INT_MAX;\n        vector<vector<pair<int, int>>> dist(N, vector<pair<int, int>>(M, {mxV, 1}));\n        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> q;\n        \n        dist[0][0] = {0, 1};\n        q.push({0, {0, 0}});\n        \n        while ((int)q.size()) {\n            int x = q.top().first;\n            pair<int, int> u = q.top().second;\n            q.pop();\n            \n            for (int i=0; i<4; i++) {\n                int nx = u.first + dx[i];\n                int ny = u.second + dy[i];\n                if (nx < 0 || ny < 0 || nx >= N || ny >= M)\n                    continue;\n                \n                int ndist = max(dist[u.first][u.second].first, g[nx][ny]) + dist[u.first][u.second].second;\n                \n                if (ndist < dist[nx][ny].first) {\n                    dist[nx][ny] = {ndist, dist[u.first][u.second].second ^ 3};\n                    q.push({dist[nx][ny].first, {nx, ny}});\n                }\n            }\n        }\n        return dist[N-1][M-1].first;\n    }\n\n    int minTimeToReach(vector<vector<int>>& moveTime) {\n        N = (int)moveTime.size(), M = (int)moveTime[0].size();\n        g = moveTime;\n        return Dijkstras();\n    }\n};","compare_resulttitle_slug":"find-minimum-time-to-reach-last-room-ii","has_notes":false,"flag_type":1}