{"id":1281718564,"question_id":523,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1717859330,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1281718564/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        int N = (int)nums.size();\n\n        bool ok = false;\n        vector<int> pref(N+1, 0);\n        for (int i=0; i<N; i++) {\n            pref[i+1] += pref[i] + nums[i];\n            // if (i > 1) ok |= !(pref[i+1] % k);\n        }\n\n        map<int, int> m;\n        for (int i=1; i<N; i++) {\n            m[pref[i-1]%k]++;\n            if (m[pref[i+1]%k]) {\n                cout << i << endl;\n                ok = true;\n            }\n        }\n\n        for (auto [k, v] : m)\n            cout << k << \" \" << v << endl;\n        for (auto i : pref)\n            cout << i << \" \";\n\n        return ok;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}