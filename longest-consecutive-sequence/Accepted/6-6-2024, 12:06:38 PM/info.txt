{"id":1279877149,"question_id":128,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1717700798,"status":10,"status_display":"Accepted","runtime":"787 ms","url":"/submissions/detail/1279877149/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"76.5 MB","code":"class Solution {\npublic:\n    struct DSU {\n        map<int, int> e;\n        void init() { \n            e = map<int, int>();\n        }\n        int get(int x) {\n            if (e[x] < 0)\n                return x;\n            return e[x] = get(e[x]);\n        }\n        int size(int x) {\n            return -e[get(x)];\n        }\n        bool unite(int x, int y) {\n            x = get(x), y = get(y);\n            if (x == y)\n                return 0;\n            if (e[x] > e[y])\n                swap(x,y);\n            e[x] += e[y];\n            e[y] = x;\n            return 1;\n        }\n    };\n\n    const int N = 1e9+1;\n    int longestConsecutive(vector<int>& nums) {\n        DSU d; d.init();\n        for (auto i : nums)\n            d.e[i+N] = -1;\n\n        int maxNum = 0;\n        for (auto i : nums) {\n            if (d.e.count(i+1+N))\n                d.unite(i+N, i+1+N);\n            if (d.e.count(i-1+N))\n                d.unite(i+N, i-1+N);\n            maxNum = max(maxNum, d.size(i+N));\n\n        }\n        \n        return maxNum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence","has_notes":false,"flag_type":1}