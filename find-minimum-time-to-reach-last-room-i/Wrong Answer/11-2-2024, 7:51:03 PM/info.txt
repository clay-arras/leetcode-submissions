{"id":1441308565,"question_id":3627,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1730602263,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1441308565/","is_pending":"Not Pending","title":"Find Minimum Time to Reach Last Room I","memory":"N/A","code":"class Solution {\npublic:\n    int N, M;\n    vector<vector<int>> g;\n    vector<int> dx = {1, 0, -1, 0};\n    vector<int> dy = {0, 1, 0, -1};\n\n    int Dijkstras() {\n        const int mxV = 1e9+1;\n        vector<vector<int>> dist(N, vector<int>(M, mxV));\n        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> q;\n        \n        dist[0][0] = 0;\n        q.push({0, {0, 0}});\n        \n        while ((int)q.size()) {\n            int x = q.top().first;\n            pair<int, int> u = q.top().second;\n            q.pop();\n            for (int i=0; i<4; i++) {\n                int nx = u.first + dx[i];\n                int ny = u.second + dy[i];\n                if (nx < 0 || ny < 0 || nx >= N || ny >= M)\n                    continue;\n                \n                int ndist = max(dist[u.first][u.second], g[nx][ny]) + 1;\n                \n                if (ndist < dist[nx][ny]) {\n                    dist[nx][ny] = ndist;\n                    q.push({dist[nx][ny], {nx, ny}});\n                }\n            }\n        }\n        return dist[N-1][M-1];\n    }\n\n    int minTimeToReach(vector<vector<int>>& moveTime) {\n        N = (int)moveTime.size(), M = (int)moveTime[0].size();\n        g = moveTime;\n        return Dijkstras();\n    }\n};","compare_resulttitle_slug":"find-minimum-time-to-reach-last-room-i","has_notes":false,"flag_type":1}