{"id":1295820572,"question_id":907,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1718987537,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/1295820572/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"21.4 MB","code":"class Solution {\npublic:\n    int firstTrue(int l, int r, function<bool(int)> f) {\n        r++;\n        while (l < r) {\n            int mid = l + (r - l) / 2;\n            if (f(mid)) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    const int MX = 1e9;\n    int minEatingSpeed(vector<int>& piles, int h) {\n        int N = (int)piles.size();\n        // sort(piles.begin(), piles.end());\n        return firstTrue(1, MX, [&](int k) {\n            int sum = 0;\n            for (int i : piles) \n                sum += ceil(i*1.0/k);\n            return sum <= h;\n        });\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}