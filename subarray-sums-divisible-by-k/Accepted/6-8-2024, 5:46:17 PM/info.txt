{"id":1282192965,"question_id":1016,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1717893977,"status":10,"status_display":"Accepted","runtime":"150 ms","url":"/submissions/detail/1282192965/","is_pending":"Not Pending","title":"Subarray Sums Divisible by K","memory":"35.4 MB","code":"class Solution {\npublic:\n    const int MX = 1e4;\n    int subarraysDivByK(vector<int>& nums, int k) {\n        int N = (int)nums.size();\n        vector<int> pref(N+1, 0);\n        for (int i=0; i<N; i++) \n            pref[i+1] += pref[i] + nums[i];\n\n        int ans = 0;\n        map<int, int> m;\n        for (int i=1; i<=N; i++) {\n            m[(pref[i-1]+MX*k)%k]++;\n            if (m[(pref[i]+MX*k)%k]) \n                ans += m[(pref[i]+MX*k)%k];\n        }\n\n        for (auto i : pref)\n            cout << i << \" \";\n        cout << endl;\n\n        for (auto [k, v] : m)\n            cout << k << \" \" << v << endl;\n\n\n        return ans;        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subarray-sums-divisible-by-k","has_notes":false,"flag_type":1}