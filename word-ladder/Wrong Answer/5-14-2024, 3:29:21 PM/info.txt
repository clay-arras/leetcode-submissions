{"id":1258226707,"question_id":127,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715725761,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1258226707/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\npublic:\n    const static int MXN = 5e3+1;\n    vector<int> adj_list[MXN];\n\n    bool areSimilar(string s1, string s2) {\n        assert(s1.length() == s2.length());\n        int count = 0;\n        for (int i=0; i<s1.length(); i++)\n            count += (s1[i] == s2[i]);\n        return (count == s1.length() - 1);\n    }\n\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        wordList.push_back(beginWord);\n\n        int N = (int)wordList.size();\n        int endIndex = -1;\n        for (int i=0; i<N; i++) {\n            if (wordList[i] == endWord)\n                endIndex = i;\n        }\n        cout << endIndex << endl;\n        if (endIndex == -1)\n            return 0;\n\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<i; j++) {\n                if (areSimilar(wordList[i], wordList[j])) {\n                    adj_list[i].push_back(j);\n                    adj_list[j].push_back(i);\n                }\n            }\n        }\n\n        queue<int> q;\n        vector<int> d(N, 0);\n\n        q.push(N-1);\n        while (!q.empty()) {\n            int x = q.front(); q.pop();\n            for (int i : adj_list[x]) {\n                if (!d[i]) {\n                    q.push(i);\n                    d[i] = d[x]+1;\n                }\n            }\n        }\n        for (int i : d)\n            cout << i << \" \";\n        cout << endl;\n\n        return d[endIndex] + 1;\n    }\n};","compare_result":"111011111111111010111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}