{"id":1247007183,"question_id":2236,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1714616648,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1247007183/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def pairSum(self, head: Optional[ListNode]) -> int:\n        curr = head\n        arr = []\n        while curr != None:\n            arr.append(curr)\n            curr = curr.next\n        \n        ans = 0\n        for i in range(len(arr)//2):\n            ans = max(ans, arr[i] + arr[len(arr)//2 - i - 1])\n        \n        return ans\n\n        ","compare_result":"0000000000000000000000000000000000000000000000","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false,"flag_type":1}