{"id":1251115289,"question_id":113,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1715020055,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1251115289/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> ans;\n    int t;\n\n    bool dfs(TreeNode n, int sum) {\n        sum += n.val;\n        if (n.left == NULL && n.right == NULL) {\n            if (sum == t) {\n                ans.push_back({n.val});\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        bool ltree = false, rtree = false;\n        if (n.left != NULL) {\n            ltree = dfs(*n.left, sum);\n            if (ltree) {\n                int len = (int)ans.size();\n                ans[len - 1].push_back(n.val);\n            }\n        }\n        if (n.right != NULL) {\n            rtree = dfs(*n.right, sum);\n            if (rtree) {\n                int len = (int)ans.size();\n                ans[len - 1].push_back(n.val);\n            }\n        }\n\n        return (ltree || rtree);\n    }\n\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        t = targetSum;\n        if (root == NULL)\n            return {};\n        dfs(*root, 0);\n        for (auto &i : ans)\n            reverse(i.begin(), i.end());\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111101","title_slug":"path-sum-ii","has_notes":false,"flag_type":1}