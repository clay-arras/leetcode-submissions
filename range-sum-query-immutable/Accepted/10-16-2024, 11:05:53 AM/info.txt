{"id":1424562219,"question_id":303,"lang":"python3","lang_name":"Python3","time":"1 month, 2 weeks","timestamp":1729101953,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/1424562219/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"20.1 MB","code":"class NumArray:\n    def __init__(self, nums: List[int]) -> None:\n        self.nums: List[int] = nums\n        self.prefix_sum: List[int] = [0 for i in range(len(self.nums) + 1)]\n\n        for i in range(1, len(self.nums) + 1):\n            self.prefix_sum[i] = self.prefix_sum[i - 1] + self.nums[i - 1]\n\n    def sumRange(self, left: int, right: int) -> int:\n        if left > right:\n            raise ValueError(\n                \"Inputs are invalid, the following inputs must follow left <= right\"\n            )\n        if left < 0 or right > len(self.nums):\n            raise IndexError(\"Inputs are out of bounds\")\n\n        return self.prefix_sum[right + 1] - self.prefix_sum[left]\n\n\n# Your NumArray object will be instantiated and called as such:\n# obj = NumArray(nums)\n# param_1 = obj.sumRange(left,right)","compare_result":"111111111111111","title_slug":"range-sum-query-immutable","has_notes":false,"flag_type":1}