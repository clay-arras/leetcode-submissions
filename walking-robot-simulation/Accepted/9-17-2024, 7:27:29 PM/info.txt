{"id":1393860075,"question_id":906,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1726626449,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/1393860075/","is_pending":"Not Pending","title":"Walking Robot Simulation","memory":"52.7 MB","code":"class Solution {\npublic:\n    vector<int> dx = {0, 1, 0, -1}, dy = {1, 0, -1, 0};\n    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {\n        map<pair<int, int>, bool> m;\n        for (auto i : obstacles) \n            m[{i[0], i[1]}] = true;\n        \n        int ans = 0, ptr = 0;\n        int x = 0, y = 0;\n        for (int i : commands) {\n            if (i == -1) {\n                ptr = (ptr + 1) % 4;\n            } else if (i == -2) {\n                ptr = (ptr + 3) % 4;\n            } else {\n                for (int k=1; k<=i; k++) {\n                    int nx = x + dx[ptr];\n                    int ny = y + dy[ptr];\n                    if (m[{nx, ny}])\n                        break;\n                    x = nx;\n                    y = ny;\n                }\n            }\n            ans = max(ans, x*x + y*y);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"walking-robot-simulation","has_notes":false,"flag_type":1}