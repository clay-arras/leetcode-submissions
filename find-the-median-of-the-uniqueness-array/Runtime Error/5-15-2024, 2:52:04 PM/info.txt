{"id":1259095895,"question_id":3362,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1715809924,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1259095895/","is_pending":"Not Pending","title":"Find the Median of the Uniqueness Array","memory":"N/A","code":"class Solution {\npublic:\n\n    int N;\n    vector<int> arr;\n\n    int lastTrue(int l, int r) {\n        l--;\n        for (int diff=r-l; diff>0; diff/=2)\n            while (l+diff <= r && ok(l+diff))\n                l += diff;\n        return l;\n    }\n\n    bool ok(int k) {\n        map<int, int> less;\n        int lans = 0;\n        int r=0, l=0, count=0;\n        for (; r<N && l<=r; r++) {\n            if (less[arr[r]] == 0) count++;\n            less[arr[r]]++;\n            while (l<r && count >= k) {\n                if (less[arr[l]] == 1) \n                    count--;\n                less[arr[l]]--;\n                l++;\n            }\n            if (count < k)\n                lans += r-l+1;\n        }\n\n        map<int, int> great;\n        int rans = 0;\n        r=0, l=0, count=0;\n        for (; r<=N && l<=r && l<N; l++) {\n            while (r<N && count < k) {\n                if (great[arr[r]] == 0) \n                    count++;\n                great[arr[r]]++;\n                r++;\n            }\n            if (count >= k)\n                rans += N-r+1;\n            if (great[arr[l]] == 1) count--;\n            great[arr[l]]--;\n        }\n\n        return lans < rans;\n    }\n\n    int medianOfUniquenessArray(vector<int>& nums) {\n        N = (int)nums.size();\n        arr = nums;\n        \n        return lastTrue(0, N);\n    }\n};","compare_resulttitle_slug":"find-the-median-of-the-uniqueness-array","has_notes":false,"flag_type":1}