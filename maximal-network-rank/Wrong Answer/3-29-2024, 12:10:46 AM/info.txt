{"id":1217087709,"question_id":1738,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1711696246,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1217087709/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"N/A","code":"class Solution {\npublic:\n    const static int MAXN = 1e2 + 2;\n    set<int> adj_list[MAXN];\n    int maximalNetworkRank(int n, vector<vector<int>>& roads) {\n        int M = (int)roads.size();\n        for (int i=0; i<M; i++) {\n            adj_list[roads[i][0]].insert(roads[i][1]);\n            adj_list[roads[i][1]].insert(roads[i][0]);\n        }\n\n        int ans = 0;\n        for (int i=0; i<n; i++) {\n            for (int j=i+1; j<n; j++) {\n                set<int> s;\n                set_union(adj_list[i].begin(), adj_list[i].end(), adj_list[j].begin(), adj_list[j].end(), inserter(s, s.begin()));\n                ans = max(ans, (int)s.size());\n                \n            }\n        }\n        return ans;\n    }\n};","compare_result":"11111100100100010010000000000000000000001000000000100011010000000000001000000000000","title_slug":"maximal-network-rank","has_notes":false,"flag_type":1}