{"id":1010274212,"question_id":238,"lang":"cpp","lang_name":"C++","time":"1 year, 4 months","timestamp":1690981863,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1010274212/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        long long mult = 1, nonz = 1;\n        int N = (int)nums.size();\n        int cnt = 0;\n        for (int i=0; i<N; i++) {\n            mult *= nums[i];\n            nonz *= (nums[i] ? nums[i] : 1);\n            if (!nums[i]) cnt++;\n        }\n            \n        vector<int> ans;\n        for (auto i : nums) {\n            if (cnt == 1 and i == 0) {\n                ans.push_back(nonz);\n            } else {\n                ans.push_back(mult / i);\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"1100000000000000000000","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}