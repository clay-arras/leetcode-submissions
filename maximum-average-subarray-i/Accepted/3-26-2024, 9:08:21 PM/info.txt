{"id":1215040962,"question_id":643,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1711512501,"status":10,"status_display":"Accepted","runtime":"138 ms","url":"/submissions/detail/1215040962/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"112.5 MB","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        int ans = 0;\n        int N = (int)nums.size();\n        for (int i=0; i<k; i++) {\n            ans += nums[i];\n        }\n        int count = ans;\n        for (int i=k; i<N; i++) {\n            count -= nums[i-k];\n            count += nums[i];\n            ans = max(ans, count);\n        }\n\n        return ans*1.0 / k;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}