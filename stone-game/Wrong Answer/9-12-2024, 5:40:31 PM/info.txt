{"id":1388238894,"question_id":909,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1726188031,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1388238894/","is_pending":"Not Pending","title":"Stone Game","memory":"N/A","code":"class Solution {\npublic:\n    bool stoneGame(vector<int>& piles) {\n        int N = (int)piles.size();\n        vector<vector<int>> dp (N, vector<int>(N, 0));\n        for (int l=0; l<N; l++) {\n            for (int r=N-1; r>l; r--) {\n                if ((r-l) % 2) dp[l][r] = -INT_MAX;\n                else dp[l][r] = INT_MAX;\n            }\n        }\n        dp[0][N-1] = 0;\n        for (int l=0; l<N; l++) {\n            for (int r=N-1; r>=l; r--) {\n                if ((r-l) % 2) { // Alice\n                    if (l-1 >= 0) dp[l][r] = max(dp[l][r], dp[l-1][r] + piles[l-1]);\n                    if (r+1 < N) dp[l][r] = max(dp[l][r], dp[l][r+1] + piles[r+1]);\n                } else { // Bob\n                    if (l-1 >= 0) dp[l][r] = min(dp[l][r], dp[l-1][r] + piles[l-1]);\n                    if (r+1 < N) dp[l][r] = min(dp[l][r], dp[l][r+1] + piles[r+1]);\n                }\n            }\n        }\n        bool ans = false;\n        for (int i=0; i<N; i++)    \n            ans |= (dp[i][i] > 0);\n        return ans;\n    }\n};","compare_result":"0000000000000000000000000000000000000000000000","title_slug":"stone-game","has_notes":false,"flag_type":1}