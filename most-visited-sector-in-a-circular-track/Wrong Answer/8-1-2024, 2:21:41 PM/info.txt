{"id":1341217632,"question_id":1682,"lang":"python3","lang_name":"Python3","time":"4Â months","timestamp":1722547301,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1341217632/","is_pending":"Not Pending","title":"Most Visited Sector in  a Circular Track","memory":"N/A","code":"class Solution:\n    def mostVisited(self, n: int, rounds: List[int]) -> List[int]:\n        diff = [0]*(n+1)\n        rounds = [i - 1 for i in rounds]\n        diff[rounds[0]] -= 1\n        diff[rounds[0]+1] += 1\n        for i in range(len(rounds)-1):\n            if rounds[i] < rounds[i+1]:\n                diff[rounds[i]+1] -= 1\n                diff[rounds[i+1]+1] += 1\n            elif rounds[i] > rounds[i+1]:\n                diff[rounds[i]+1] += 1\n                diff[rounds[i+1]+1] -= 1\n        \n        arr = [0]*(n+1)\n        for i in range(n):\n            arr[i+1] = arr[i] - diff[i+1]\n        print(arr)\n\n        return diff\n                \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"most-visited-sector-in-a-circular-track","has_notes":false,"flag_type":1}