{"id":1373513276,"question_id":2590,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1725043371,"status":10,"status_display":"Accepted","runtime":"329 ms","url":"/submissions/detail/1373513276/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"139.8 MB","code":"class Solution {\npublic:\n    const static int MX = 1e5+1;\n    vector<pair<int, int>> adj_list[MX];\n    vector<int> arr;\n    vector<bool> visited;\n    int N, K;\n    int ans = -INT_MAX;\n\n    void dfs(int s) {\n        visited[s] = true;\n\n        int prev = arr[s];\n        ans = max(ans, prev);\n        for (int i=0; i<(int)adj_list[s].size(); i++) {\n            auto p = adj_list[s][i];\n            if (i < K) prev += p.first;\n            ans = max(ans, prev);\n            if (!visited[p.second]) \n                dfs(p.second);\n        }\n    }\n\n    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {\n        arr = vals;\n        N = (int)arr.size();\n        K = k;\n\n        for (auto i : edges) {\n            adj_list[i[0]].push_back({arr[i[1]], i[1]});\n            adj_list[i[1]].push_back({arr[i[0]], i[0]});\n        }\n        for (int i=0; i<N; i++)\n            sort(adj_list[i].rbegin(), adj_list[i].rend());\n        \n        visited = vector<bool>(N, false);\n        for (int i=0; i<N; i++)\n            if (!visited[i])\n                dfs(i);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"maximum-star-sum-of-a-graph","has_notes":false,"flag_type":1}