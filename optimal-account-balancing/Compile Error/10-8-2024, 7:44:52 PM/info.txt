{"id":1416506597,"question_id":465,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1728441892,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/1416506597/","is_pending":"Not Pending","title":"Optimal Account Balancing","memory":"N/A","code":"class Solution {\npublic:\n    const int MX = 11;\n\n    int minTransfers(vector<vector<int>>& transactions) {\n        vector<int> amount(MX, 0);\n        for (auto i : transactions) {\n            amount[i[0]] -= i[2];\n            amount[i[1]] += i[2];\n        }\n        sort(amount.begin(), amount.end());\n        \n        int ans;\n        for (; amount[0] != 0; ans++) {\n            int N = (int)amount.size();\n            amount.push_back(amount[0] + amount[N-1]);\n            amount[0] = 0;\n            amount[N-1] = 0;\n            sort(amount.begin(), amount.end());\n        }\n\n        return min(ans, max(temp1, temp2));\n    }\n};\n","compare_result":null,"title_slug":"optimal-account-balancing","has_notes":false,"flag_type":1}