{"id":1405492987,"question_id":1224,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727570033,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1405492987/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"N/A","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& grid) {\n        // dp[i][j]\n        // where i is the row, and j is the col, and dp[i][j] = sum\n\n        int N = (int)grid.size(), M = (int)grid[0].size();\n        vector<vector<int>> dp(N, vector<int>(M, INT_MAX));\n        for (int i=0; i<M; i++)\n            dp[0][i] = grid[0][i];\n\n        for (int i=1; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                if (j-1 >= 0)\n                    dp[i][j] = min(dp[i][j], dp[i-1][j-1]);\n                if (j+1 < M)\n                    dp[i][j] = min(dp[i][j], dp[i-1][j+1]);\n                dp[i][j] += grid[i][j];\n\n            }\n        }\n\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++)\n                cout << dp[i][j] << \" \";\n            cout << endl;\n        }\n\n        int ans = INT_MAX;\n        for (int i=0; i<M; i++)\n            ans = min(ans, dp[N-1][i]);\n        return ans;\n    }\n};","compare_result":"11100000000001011","title_slug":"minimum-falling-path-sum-ii","has_notes":false,"flag_type":1}