{"id":1405526577,"question_id":1224,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727574988,"status":10,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/1405526577/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"18.6 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& grid) {\n        int N = (int)grid.size(), M = (int)grid[0].size();\n        vector<vector<pair<int, int>>> minVals(N, vector<pair<int, int>>(2, {INT_MAX, INT_MAX}));\n        vector<vector<int>> dp(N, vector<int>(M, INT_MAX));\n\n        for (int j=0; j<M; j++) {\n            dp[0][j] = grid[0][j];\n            pair<int, int> t = {grid[0][j], j};\n            if (minVals[0][0] > t) {\n                minVals[0][1] = minVals[0][0];\n                minVals[0][0] = t;\n            }\n            else if (minVals[0][1] > t)        \n                minVals[0][1] = t;\n        }\n\n        for (int i=1; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                dp[i][j] = grid[i][j];\n                if (minVals[i-1][0].second != j) {\n                    dp[i][j] += minVals[i-1][0].first;\n                } else {\n                    dp[i][j] += minVals[i-1][1].first;\n                }\n\n                pair<int, int> t = {dp[i][j], j};\n                if (minVals[i][0] > t) {\n                    minVals[i][1] = minVals[i][0];\n                    minVals[i][0] = t;\n                } else if (minVals[i][1] > t) {\n                    minVals[i][1] = t;\n                }\n            }\n        }\n\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                cout << setw(4) << grid[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        cout << endl;\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<M; j++) {\n                cout << setw(4) << dp[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        cout << endl;\n        for (int i=0; i<N; i++)\n            cout << minVals[i][0].first << \",\" << minVals[i][0].second << \"  \" << minVals[i][1].first << \",\" << minVals[i][1].second << endl;\n\n\n        return minVals[N-1][0].first;\n    }\n};\n","compare_result":"11111111111111111","title_slug":"minimum-falling-path-sum-ii","has_notes":false,"flag_type":1}