{"id":1405529943,"question_id":1224,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1727575453,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1405529943/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"18.6 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& grid) {\n        int N = (int)grid.size();\n        vector<vector<pair<int, int>>> minVals(N, vector<pair<int, int>>(2, {INT_MAX, 0}));\n        vector<vector<int>> dp(N, vector<int>(N, INT_MAX));\n\n        for (int i=0; i<N; i++) {\n            for (int j=0; j<N; j++) {\n                dp[i][j] = grid[i][j];\n\n                if (i-1 >= 0 && minVals[i-1][0].second != j) {\n                    dp[i][j] += minVals[i-1][0].first;\n                } else if (i-1 >= 0) {\n                    dp[i][j] += minVals[i-1][1].first;\n                }\n\n                pair<int, int> t = {dp[i][j], j};\n                if (minVals[i][0] > t) {\n                    minVals[i][1] = minVals[i][0];\n                    minVals[i][0] = t;\n                } else if (minVals[i][1] > t) {\n                    minVals[i][1] = t;\n                }\n            }\n        }\n\n        return minVals[N-1][0].first;\n    }\n};\n","compare_result":"11111111111111111","title_slug":"minimum-falling-path-sum-ii","has_notes":false,"flag_type":1}