{"id":1299267369,"question_id":1114,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1719274149,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1299267369/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"10.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int trav(TreeNode* node, int sum) {\n        if (node->right != NULL)\n            sum = trav(node->right, sum);\n        sum += node->val;\n        node->val = sum;\n        if (node->left != NULL)\n            sum = trav(node->left, sum);\n        return sum;\n    }\n    TreeNode* bstToGst(TreeNode* root) {\n        trav(root, 0);\n        return root;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree","has_notes":false,"flag_type":1}