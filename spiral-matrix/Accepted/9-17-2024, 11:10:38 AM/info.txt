{"id":1393549525,"question_id":54,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1726596638,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1393549525/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"8.9 MB","code":"class Solution {\npublic:\n    int N, M;\n    vector<vector<int>> m;\n    vector<vector<bool>> visited;\n    vector<int> ans;\n    vector<int> dy = {1, 0, -1, 0};\n    vector<int> dx = {0, 1, 0, -1};\n\n    void dfs(int i, int j, int it) {\n        visited[i][j] = true;\n        ans.push_back(m[i][j]);\n\n        for (int k=0; k<4; k++) {\n            int t = (k+it)%4;\n            int x = i+dx[t], y = j+dy[t];\n            if (x >= 0 && x < N && y >= 0 && y < M && !visited[x][y])\n                dfs(x, y, t);\n        }\n    }\n\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        m = matrix;\n        N = (int)matrix.size(), M = (int)matrix[0].size();\n\n        visited = vector<vector<bool>> (N, vector<bool>(M, false));\n        dfs(0, 0, 0);\n\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}