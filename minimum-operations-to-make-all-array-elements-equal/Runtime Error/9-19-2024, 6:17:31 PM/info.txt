{"id":1395984309,"question_id":2718,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1726795051,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1395984309/","is_pending":"Not Pending","title":"Minimum Operations to Make All Array Elements Equal","memory":"N/A","code":"class Solution {\npublic:\n    int firstTrue(int l, int r, function<bool(int)> f) {\n        r++;\n        while (l < r) {\n            int mid = l + (r - l) / 2;\n            if (f(mid)) r = mid;\n            else l = mid + 1;\n        }\n        return l;\n    }\n\n    vector<long long> minOperations(vector<int>& nums, vector<int>& queries) {\n        // binary search + prefix sum + sorting\n        // O(NlogN)\n\n        int N = (int)nums.size();\n        sort(nums.begin(), nums.end());\n        vector<int> pref(N+1, 0);\n        for (int i=0; i<N; i++)\n            pref[i+1] = pref[i] + nums[i];\n        \n        for (int i : nums)\n            cout << i << \" \";\n        cout << endl;\n        for (int i : pref)\n            cout << i << \" \";\n        cout << endl;\n\n        vector<long long> ans;\n        for (int j=0; j<(int)queries.size(); j++) {\n            auto ok = [&](int k) {\n                return nums[k] > queries[j];\n            };\n            for (int i=0; i<N; i++)\n                cout << ok(i) << \" \";\n            cout << endl;\n            int t = firstTrue(0, N-1, ok);\n            cout << t << endl;\n\n            int val = 0;\n            val += (pref[N] - pref[t] - queries[j]*(N - t));\n            val += (queries[j]*t - pref[t]);\n\n            ans.push_back(val);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111110000000000","title_slug":"minimum-operations-to-make-all-array-elements-equal","has_notes":false,"flag_type":1}