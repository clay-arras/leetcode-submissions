{"id":1352924837,"question_id":1907,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1723452350,"status":10,"status_display":"Accepted","runtime":"1902 ms","url":"/submissions/detail/1352924837/","is_pending":"Not Pending","title":"Count Pairs With XOR in a Range","memory":"262.6 MB","code":"class Solution {\npublic:\n    const static int BITS = 16;\n    static string intToBinstr(long long i) {\n        return bitset<BITS>(i).to_string();\n    }\n\n    struct Trie {\n        vector<Trie*> pt;\n        int sz = 0;\n        Trie() { pt = vector<Trie*>(2, nullptr); }\n        auto insert(string s) {\n            sz++;\n            if (s.empty()) return false;\n            if (pt[0] == nullptr)  pt[0] = new Trie();\n            if (pt[1] == nullptr)  pt[1] = new Trie();\n            return pt[s[0] - '0']->insert(s.substr(1));\n        }\n        int search(string s, int pref, int k) {\n            int val = (1 << (int)s.size());\n            if (pref*val > k) return 0;\n            if (pref*val + (val-1) <= k) return sz;\n\n            int ans = 0;\n            if (pt[1] != nullptr) ans += pt[1]->search(s.substr(1), 2*pref + ((s[0]-'0') ^ 1), k);\n            if (pt[0] != nullptr) ans += pt[0]->search(s.substr(1), 2*pref + ((s[0]-'0') ^ 0), k);\n            return ans;\n        }\n    };\n\n    int countPairs(vector<int>& nums, int low, int high) {\n        int N = (int)nums.size();\n        auto lessThanK = [&](int k) { \n            Trie* obj = new Trie();\n            int ans = 0;\n            for (int i=0; i<N; i++) {\n                ans += obj->search(intToBinstr(nums[i]), 0, k);\n                obj->insert(intToBinstr(nums[i]));\n            }\n            return ans;\n        };\n        return lessThanK(high) - lessThanK(low - 1);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-pairs-with-xor-in-a-range","has_notes":false,"flag_type":1}