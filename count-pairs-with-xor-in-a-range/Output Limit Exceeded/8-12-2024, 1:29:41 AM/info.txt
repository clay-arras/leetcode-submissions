{"id":1352912820,"question_id":1907,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1723451381,"status":13,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1352912820/","is_pending":"Not Pending","title":"Count Pairs With XOR in a Range","memory":"N/A","code":"class Solution {\npublic:\n    const static int BITS = 31;\n    static long long binstrToInt(string s) {\n        return bitset<BITS>(s).to_ulong();\n    }\n    static string intToBinstr(long long i) {\n        return bitset<BITS>(i).to_string();\n    }\n\n    struct Trie {\n        vector<Trie*> pt;\n        int sz = 0;\n        Trie() { pt = vector<Trie*>(2, nullptr); }\n        auto insert(string s) {\n            sz++;\n            if (s.empty())\n                return false;\n            if (pt[0] == nullptr) \n                pt[0] = new Trie();\n            if (pt[1] == nullptr) \n                pt[1] = new Trie();\n            return pt[s[0] - '0']->insert(s.substr(1));\n        }\n        long long search(string s, string pref, long long k) {\n            cout << endl;\n            cout << sz << endl;\n            cout << s << \" \" << pref << endl;\n\n            string mxs = pref, mns = pref;\n            for (int i = 0; i < (int)s.size(); i++) {\n                mxs += '1'; \n                mns += '0';\n            }\n            cout << mxs << \" \" << mns << endl;\n            long long mx = binstrToInt(mxs);\n            long long mn = binstrToInt(mns);\n            cout << \"MN \" << mx << \" \" << mn << endl;\n\n            if (mn > k)\n                return 0;\n            if (mx <= k)\n                return sz;\n\n            int ans = 0;\n            if (pt[1] != nullptr)\n                ans += pt[1]->search(s.substr(1), pref + to_string((s[0]-'0') ^ 1), k);\n            if (pt[0] != nullptr)\n                ans += pt[0]->search(s.substr(1), pref + to_string((s[0]-'0') ^ 0), k);\n            return ans;\n        }\n    };\n\n    int countPairs(vector<int>& nums, int low, int high) {\n        int N = (int)nums.size();\n        auto lessThanK = [&](int k) { \n            Trie* obj = new Trie();\n            long long ans = 0;\n            for (int i=0; i<N; i++) {\n                long long val = obj->search(intToBinstr(nums[i]), \"\", k);\n                cout << \"VAL \" << val << endl;\n                ans += val;\n                obj->insert(intToBinstr(nums[i]));\n            }\n            return ans;\n        };\n        // cout << lessThanK(6) << endl;\n        // return 0;\n        return lessThanK(high) - lessThanK(low - 1);\n    }\n};","compare_result":"111111111111100000000000000000000000000000000000000000000000000","title_slug":"count-pairs-with-xor-in-a-range","has_notes":false,"flag_type":1}