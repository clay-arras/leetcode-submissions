{"id":1280859820,"question_id":1397,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1717787303,"status":10,"status_display":"Accepted","runtime":"581 ms","url":"/submissions/detail/1280859820/","is_pending":"Not Pending","title":"Search Suggestions System","memory":"532.7 MB","code":"class Solution {\npublic:\n    struct Trie {\n        vector<Trie*> pt;\n        vector<string> hold;\n        bool en = false;\n        Trie() { pt = vector<Trie*>(26, nullptr); }\n        auto insert(string s, string orig) {\n            hold.push_back(orig);\n            if (s.empty()) return (en = true);\n            if (pt[s[0]-'a'] == nullptr) {\n                Trie* t = new Trie();\n                pt[s[0]-'a'] = t;\n            }\n            return pt[s[0]-'a']->insert(s.substr(1), orig);\n        }\n        vector<string> search(string s) {\n            if (s.empty()) {\n                vector<string> ans;\n                sort(hold.begin(), hold.end());\n                for (int i=0; i<min(3, (int)hold.size()); i++)\n                    ans.push_back(hold[i]);\n                return ans;\n            }\n            if (pt[s[0]-'a'] == nullptr)\n                return {};\n            return pt[s[0]-'a']->search(s.substr(1));\n        }\n    };\n\n    vector<vector<string>> suggestedProducts(vector<string>& products, string searchWord) {\n        Trie t;\n        vector<vector<string>> ans;\n        for (string s : products)\n            t.insert(s, s);\n        \n        string s = \"\";\n        s += searchWord[0];\n        for (int i=0; i<(int)searchWord.size(); i++, s+=searchWord[i]) {\n            ans.push_back(t.search(s));\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"search-suggestions-system","has_notes":false,"flag_type":1}